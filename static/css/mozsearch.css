/**
 * normalize - Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/* apply a natural box layout model to all elements */
* {
  box-sizing: border-box;
}

:root {
  --page-background: #fff;
  --page-foreground: #333;
  --page-subtle-foreground: #666;
  --page-border-color: #333;

  --button-color: var(--page-color);
  --button-background: #f5f5f5;
  --button-hover-background: white;
  --button-active-background: #d5d5d5;

  --link-color: #0095dd;
  --link-hover-color: #00539f;

  --search-box-background-image: linear-gradient(to bottom, #f8f8f8, #eaeaea);
  --revision-text-color: #656565;

  --panel-header-background: #333;
  --panel-header-color: #fff;

  --list-hover-background: #e0e0e0;
  --list-hover-color: var(--page-foreground);

  --info-box-test-skip-info-background: #eee;
  --info-box-error-background: #ffeeee;
  --info-box-warning-background: #ffffee;
  --info-box-info-background: #eeffee;

  --table-header-color: #555;
  --table-header-background: #f5f5f5;
  --table-even-row-background: #f5f5f5;

  --blame-popup-background: #404040;
  --blame-popup-color: #fff;
  --blame-light-gray: lightgray;
  --blame-dark-gray: darkgray;

  --context-menu-new-section: #ccc;
  --context-menu-same-section: #f8f8f8;

  --line-highlight-background: rgb(255, 255, 204);
  --line-stuck-background: #ffe;

  --syntax-type-color: teal;
  --syntax-comment-color: darkred;
  --syntax-reserved-color: blue;
  --syntax-string-color: green;
  --syntax-regex-color: #6d7b8d;
  --syntax-symbol-highlight: yellow;

  /* Our red-blue color scheme is from
   * https://colorbrewer2.org/#type=diverging&scheme=RdBu&n=11 and was chosen
   * for being "color blind friendly" while also being reasonably intuitive thanks
   * to a correspondence to the stereotypical red/green color theme (that's not
   * color blind friendly!). */
  --cov-interpolated-background: #f7f7f7;
  --cov-miss-background: #f4a582;
  --cov-hit-background-1: #d1e5f0;
  --cov-hit-background-2: #92c5de;
  --cov-hit-background-3: #4393c3;
  --cov-hit-background-4: #2166ac;
  --cov-hit-background-5: #053061;

  --cov-hit-unhovered-background: var(--cov-hit-background-1);
  --cov-miss-unhovered-background: var(--cov-miss-background);

  --diff-minus-line-background: rgb(255, 204, 204);
  --diff-plus-line-background: rgb(153, 204, 255);

  --result-context-color: royalblue;

  --select-arrow-svg: url("../images/select-arrow-light.svg");

  --diagram-depth-hue: 270deg;

  --base-font-size: 12px;
  --base-line-height: 1.5;
  --source-line-height: 1.3;

  --search-box-padding: 0.8rem;
  --search-box-old-rev-padding-bottom: 0.4rem;

  --revision-padding-top: 0.2rem;

  --checkbox-margin: 3px;
  --checkbox-height: 14px;

  --search-box-fieldset-min-height: calc(
    2 * (
      var(--checkbox-margin)
      + var(--checkbox-height)
      + var(--checkbox-margin)
    )
  );
}

@supports (color-scheme: dark) {
@media (prefers-color-scheme: dark) {
  :root {
    --page-background: rgb(28, 27, 34);
    --page-foreground: rgb(251, 251, 254);
    --page-subtle-foreground: #ccc;
    --page-border-color: ThreeDLightShadow;

    --search-box-background-image: linear-gradient(to bottom, #444, #333);
    --revision-text-color: #ddd;

    --button-background: rgb(43, 42, 51);
    --button-hover-background: rgb(82, 82, 94);
    --button-active-background: rgb(91, 91, 102);

    --link-color: #1897db;
    --link-hover-color: #016cbf;

    --list-hover-background: var(--button-hover-background);

    --info-box-test-skip-info-background: #161b22;
    --info-box-error-background: #57161c;
    --info-box-warning-background: #664d03;
    --info-box-info-background: #0a3722;

    --table-header-color: var(--page-foreground);
    --table-header-background: rgb(43, 42, 51);
    --table-even-row-background: rgb(34, 37, 44);

    --blame-light-gray: #595959;
    --blame-dark-gray: #393939;

    --context-menu-new-section: #444;
    --context-menu-same-section: #181818;

    --line-highlight-background: #3c3111;
    --line-stuck-background: #221c09;

    --syntax-comment-color: GrayText;
    --syntax-symbol-highlight: #5d4d1d;
    /* Shamelessly taken from source.chromium.org's dark theme */
    --syntax-type-color: #79a9c4;
    --syntax-reserved-color: #d8884b;
    --syntax-string-color: #97c67b;
    --syntax-regex-color: #b98eff;

    /* Hit colors from the dark bits from https://colorbrewer2.org/#type=sequential&scheme=Blues&n=9
     * Miss background from the same link as the light colors (the darkest red in there). */
    --cov-interpolated-background: #595959;
    --cov-miss-background: #67001f;
    --cov-hit-background-1: #6baed6;
    --cov-hit-background-2: #4292c6;
    --cov-hit-background-3: #2171b5;
    --cov-hit-background-4: #08519c;
    --cov-hit-background-5: #08306b;

    --diff-minus-line-background: #42161c;
    --diff-plus-line-background: #172c47;

    --result-context-color: #7892df;

    --select-arrow-svg: url("../images/select-arrow-dark.svg");

    color-scheme: dark;
  }
}
}

@media (forced-colors) {
  :root {
    --blame-popup-background: Canvas;
    --blame-popup-color: CanvasText;
    --blame-light-gray: ButtonFace;
    --blame-dark-gray: ButtonText;
  }
}

:root {
  font: var(--base-font-size)/var(--base-line-height) Arial, Helvetica, sans-serif;

  background-color: var(--page-background);
  color: var(--page-foreground);
}

body {
  margin: 0;
}

/* Link styling */
a {
  color: var(--link-color);
  text-decoration: none;
}

a:hover {
  color: var(--link-hover-color);
  text-decoration: underline;
}

/* Some links look like list items */
.panel section .item,
.folder-content a {
  text-decoration: none;
  color: unset;
}

/* .folder-content is handled with the whole row getting hover styles, so it doesn't need this. */
.panel section .item:is(:hover, :focus),
.context-menu a:is(:hover, :focus) {
  background-color: var(--list-hover-background);
  color: var(--list-hover-color);
  outline: none;
}

/* Others look more seamless (they only show underlines when hovered) */
.file a,
.results tr:where(:not(.result-head)) a {
  color: unset;
}

/* Some links always show underlines, but use the underlying text color */
#revision a,
.info-box a,
.blame-popup a {
  color: unset;
  text-decoration: underline;
}

#content details {
  margin-left: 2rem;
}

/* summary headings should not start a new block and should not have crazy big margins */
details > summary > h1,
details > summary > h2,
details > summary > h3,
details > summary > li > h3 {
  display: inline-block;
  margin: 4px 0px;
}
details > summary > li {
  display: inline-block;
  margin-left: 10px;
}

details > summary > h1 {
  font-size: 16px;
}
details > summary > h2 {
  font-size: 14px;
}
details > summary > h3,
details > summary > li > h3 {
  font-size: var(--base-font-size);
}


h4 {
  margin: 0 0 0.5rem 0;
}
caption {
  text-align: left;
}
table {
  margin: 0;
  padding: 0;
  width: 100%;
  overflow: auto;
}
table.folder-content {
  margin: 0.5rem 2rem;
  width: calc(100% - 4rem);
}
table#file {
  width: 100%;
}
table.folder-content thead tr:first-child {
  color: var(--table-header-color);
  background-color: var(--table-header-background);
  padding: 0.5em;
}
table th {
  font-weight: bold;
  padding: 0.5em;
  text-align: left;
}
.folder-content th:first-child {
  padding-left: 0.5em;
}
.folder-content th {
  padding-left: 0;
  padding-right: 0.5em;
  padding-top: 0.2em;
  padding-bottom: 0.2em;
}
table.folder-content tr:nth-child(even) {
  background-color: var(--table-even-row-background);
}
table.folder-content tbody tr:hover,
table tbody tr:hover {
  background-color: var(--list-hover-background);
  color: var(--list-hover-color);
}
table.folder-content td {
  padding: 0;
}
table.folder-content a {
  display: block; /* Make entire cells clickable. */
  padding-top: 0.5em;
  padding-right: 0.5em;
  padding-bottom: 0.5em;
}
table td {
  padding: 0.5em;
}
table.folder-content td.description {
  max-width: 60vw;
  padding-right: 2em;
}
table.folder-content td.description a {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
td.code {
  padding: 0 0 0 0.5em;
}
td#line-numbers {
  padding: 0;
}

.source-line-with-number {
  padding: 0rem 1rem;
  line-height: var(--source-line-height);
  display: flex;
}

.line-number::before {
  content: attr(data-line-number);
}

.line-number {
  display: inline-block;
  cursor: pointer;
  text-align: right;
  padding: 0 0.5rem;
  /* this was originally set on the ".file td:first-child" */
  color: #aaa;
  width: 8ex;
  flex-shrink: 0;
  /* This prevents shift-clicking in non-gecko browsers from selecting all
   * text in between the lines */
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}
.highlighted {
  background: none repeat scroll content-box 0 0 var(--line-highlight-background) !important;
}
.source-line {
  margin: 0;
  padding: 0;
  display: inline-block;
  white-space: pre;
  flex-grow: 1;
}

.source-line-with-number.stuck {
  background-color: var(--line-stuck-background);
}
.source-line-with-number.last-stuck {
  box-shadow: 0px 4px 8px rgba(0, 0, 0, .9);
}

.source-line a,
g[data-symbols] {
  cursor: pointer;
}
.code code {
  padding: 0 0.5rem;
  width: 100%;
}
.code code a {
  cursor: context-menu;
}
mark {
  position: relative;
  padding: 0.5rem;
}

/**
 * New fixed header mechanism!
 *
 * Previously, the search box stayed stuck at the top of the screen via
 * use of "position: fixed".  This was problematic with browser default
 * anchor positioning, but became untenable when we wanted to start using
 * "position: sticky" to show nesting scopes because we needed to specify "top"
 * positions for each nested sticky level, and it was hard to know for sure how
 * big the search box would actually be without involving JS.
 *
 * So our solution is to use flexbox to create a non-scrolling fixed-header,
 * allotting the remaining space to a scrolling region.
 */

html {
  height: 100%;
}
body {
  height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

#fixed-header {
  flex-shrink: 0;
  display: inline-flex;
}

#scrolling {
  flex-grow: 1;
  overflow-y: auto;
}

/**
 * Nesting!
 */

.nesting-depth-0 {
  --nesting-level: 0;
}
.nesting-depth-1 {
  --nesting-level: 1;
}
.nesting-depth-2 {
  --nesting-level: 2;
}
.nesting-depth-3 {
  --nesting-level: 3;
}
.nesting-depth-4 {
  --nesting-level: 4;
}
.nesting-depth-5 {
  --nesting-level: 5;
}
.nesting-depth-6 {
  --nesting-level: 6;
}
.nesting-depth-7 {
  --nesting-level: 7;
}
.nesting-depth-8 {
  --nesting-level: 8;
}
.nesting-depth-9 {
  --nesting-level: 9;
}

.nesting-sticky-line {
  /* be sticky, contained within a .nesting-container */
  position: sticky;
  /* even with our "stuck" and "last-stuck" classes, it's important to have an
   opaque background color for these because those classes don't take effect
   immediately. */
  background-color: var(--page-background-color);
  top: calc(var(--nesting-level) * var(--base-font-size) * var(--source-line-height));
  z-index: calc(100 - var(--nesting-level));
}
/* Search results */

.search-result-header {
  padding: 0 2rem;
}

table.results {
  margin: 0.5rem 2rem;
  width: calc(100% - 4rem);
}

/* Make context lines more subtle. */
.results tr.before-context-line,
.results tr.after-context-line {
  opacity: 0.5;
}

/* Delineate the transition between consecutive groups. */
tr.after-context-line + tr.before-context-line {
  border-top: 1px solid gray;
}

.results tr:hover,
.file tr:hover {
  background: none;
}
.results tr,
.file tr {
  border: 0;
  line-height: var(--source-line-height);
}
.file tr .line-number,
.file tr .code pre code {
  /* don't let bolded code increase the line-height - see bug 1322740 comment 9 */
  max-height: calc(var(--base-font-size) * var(--source-line-height));
}
.left-column,
.file td:first-child {
  text-align: right;
  color: #aaa;
  width: 8ex;
}
.results td {
  padding: 0.1rem 0.5rem;
}
.results a {
  cursor: pointer;
  display: inline-block;
}
.file a:target {
  background-color: gray;
  color: white;
  padding: 0 0.5rem;
}
.results code {
  white-space: pre;
}
.result-head td {
  padding-top: 0.3rem; /* Additional padding to visually separate results.*/
  padding-bottom: 0;
}
.result-head td.left-column {
  padding-right: 0.2rem; /* Moves the icon closer to the path by reducing the padding.*/
}

.result-context {
  font-style: italic;
  margin-left: 10px;
  padding-left: 4px;
  padding-right: 4px;
  color: var(--result-context-color);
}

.result-upsearch {
  padding-left: 8px;
  color: var(--link-color);
}

.section {
  text-align: right;
  font-size: 150%;
}

.result-pathkind {
  font-size: 150%;
}

.result-kind {
  font-size: var(--base-font-size);
  font-weight: 800;
}

.expando {
  cursor: pointer;
  color: var(--page-foreground);
}
/* End search results */

.file td {
  padding: 0;
}
.file pre {
  margin: 0;
}

/* Context menu */
.context-menu {
  /* absolutely positioned within the containing block of the <body> relative
     to the click event */
  position: absolute;
  background-color: var(--page-background);
  color: var(--page-color);
  margin: 0;
  padding: 0;
  border: 1px solid var(--page-border-color);
  border-radius: 6px;
  list-style: none;
  z-index: 102;
  overflow: auto;
  transition: opacity .2s ease;
}
.context-menu:not(.bottom) {
  border-top-left-radius: 0;
}
.context-menu.bottom {
  border-bottom-left-radius: 0;
}
.context-menu:focus {
  outline: none;
}
.context-menu a {
  display: block;
}
.context-menu-group-label {
  display: block;
  padding: 0.5em;
  font-weight: bold;
}
.content {
  padding: 0.5rem 0rem;
}

/* Breadcrumbs */
.path-separator {
  margin: 0 0.2rem;
}
.breadcrumbs {
  display: inline-block;
  margin: 0;
  padding: 1rem;
  text-align: left;
}

#tree-switcher {
  pointer-events: auto;
  background-color: transparent;
  background-image: var(--select-arrow-svg);
  background-position: center center;
  background-repeat: no-repeat;
  appearance: none;
  border: none;
  vertical-align: middle;
  width: 24px;
  height: 24px;
  border-radius: 2px;
}
#tree-switcher:hover {
  background-color: var(--list-hover-background);
}
#tree-switcher:active {
  background-color: var(--button-active-background);
}

#tree-switcher-menu {
  display: flex;
  flex-direction: row;
}

#tree-switcher-menu ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

#tree-switcher-menu ul + ul {
  border-inline-start: 1px solid var(--page-border-color);
}

#tree-switcher-menu .indent {
  padding-inline-start: 24px;
  padding-inline-end: 24px;
}

/* Footer */
.footer {
  color: #999;
  font-size: 1rem;
  margin: 1.2rem;
  justify-content: center;
}

/* Navigation panel */
.panel {
  /* (position:fixed is always relative to the viewport's initial containing
     block, so it doesn't matter where this node lives in the DOM, apart from
     accessibility tree purposes.) */
  position: fixed;
  /* We position the navigation panel just below the search box so that when
   * it is collapsed it exists in the margins of the page so that we can show
   * it on all pages.
   *
   * Previously it was styled to be floating on the page which was only
   * appropriate on source listing pages where it would usually be in the
   * right margin of the page. But now we want it visible on all pages.
   *
   * Note that on pages where we display the indexed revision as part of the
   * search box, this offset needs to be adjusted, and we do that below using
   * the ".old-rev" selector. */
  top: calc(
      var(--search-box-padding)
      + var(--search-box-fieldset-min-height)
      + var(--search-box-padding)
  );
  right: 22px;
  background-color: var(--page-background);
  border: 1px solid var(--page-border-color);
  min-width: 12rem;
  overflow-y: auto;
  overflow-x: hidden;
  max-height: calc(100% - 150px);
  z-index: 102;
}
:root.old-rev .panel {
  /* Adjust the navigation panel location for the presence of the indexed revision.
   * See above for more. */
  top: calc(
      var(--search-box-padding)
      + var(--search-box-fieldset-min-height)
      + var(--revision-padding-top)
      + var(--base-font-size) * var(--base-line-height)
      + var(--search-box-old-rev-padding-bottom)
  );
}
#panel-toggle {
  display: inline-block;
  background-color: var(--panel-header-background);
  color: var(--panel-header-color);
  margin: 0;
  padding: 0.5rem 0.2rem 0.5rem 0.7rem;
  border: 0;
  width: 100%;
  text-align: left;
  cursor: pointer;
}
#show-settings {
  float: right;
  color: var(--panel-header-color);
}
.navpanel-icon {
  display: inline-block;
  margin-right: 0.5rem;
  transform: rotate(-90deg);
  transition: all 0.1s;
}
.navpanel-icon.expanded {
  transform: rotate(0deg);
  transition: all 0.1s;
}
.panel h4 {
  margin: 0;
  padding: 0.5rem;
}
.panel ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
.panel a.class {
  background-position: 4px 8px;
}
.panel a.method {
  background-position: 4px 6px;
}
.panel a.field {
  background-position: 2px 10px;
}
.panel section .item {
  display: inline-block;
  width: 100%;
  cursor: pointer;
}
.panel section button.item {
  font: unset;
  appearance: unset;
  border: unset;
  text-align: unset;
}
.panel section .item:disabled,
.panel section .item.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.panel .selected-symbol-section {
  width: 240px;
  display: grid;
  grid-template-columns: 200px 30px;
  gap: 10px;
}

.panel .selected-symbol-section .selected-symbol-box {
  position: relative;
}

.panel .selected-symbol-section .selected-symbol-box .selected-symbol-ns {
  position: absolute;
  top: -1em;
  padding-inline-start: 26px;
  height: 0.8em;
  font-size: 0.8em;
  white-space: pre;
}
.panel .selected-symbol-section .selected-symbol-box .selected-symbol-local {
  padding-inline-start: 30px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: pre;
}

.panel .selected-symbol-section .copy-box.disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Info Boxes */
.info-box {
  border: 1px solid rgba(0, 0, 0, .5);
  border-radius: 8px;
  padding: 0.8rem;
  margin: 0.5rem;
  font-size: 110%;
}
.info-box-error {
  background-color: var(--info-box-error-background);
}
.info-box-warning {
  background-color: var(--info-box-warning-background);
}
.info-box-info {
  background-color: var(--info-box-info-background);
}
.info-box ul {
  padding-inline-start: 20px;
  margin: 0;
}
.info-box .test-skip-info {
  font-family: monospace;
  background-color: var(--info-box-test-skip-info-background);
  padding: 5px;
  margin: -5px;
}

.no-results {
  clear: both;
  font-style: italic;
}
#fetch-results {
  display: none;
}

/* Hovering over symbol names */
span[data-symbols]:hover {
  cursor: pointer;
}
span[data-symbols].hovered,
span[data-symbols].selected {
  background-color: var(--syntax-symbol-highlight);
}

/* Help screen */
.intro, .settings-page {
  font: 14px/var(--base-line-height).5 Arial, Helvetica, sans-serif;
  margin-left: 10%;
  margin-right: 10%;
  margin-bottom: 10%;
}

.intro td,
.intro th {
  text-align: center;
  vertical-align: middle;
}
.intro td[yes]::before {
  content: "\2713";
}

.contextmenu-link:before {
  padding-right: 0.4em;
}
.context-menu .contextmenu-link {
  text-decoration: none;
  color: var(--page-subtle-foreground);
  padding: 0.5em;
}
.contextmenu-link > strong {
  color: var(--page-foreground);
  font-weight: normal;
}

.contextmenu-row ~ .contextmenu-row.contextmenu-same-section  {
  border-top: 1px solid var(--context-menu-same-section);
}

.contextmenu-row ~ .contextmenu-row.contextmenu-new-section  {
  border-top: 1px solid var(--context-menu-new-section);
}

/* ## Line number goto ##

   `createSyntheticAnchor` in code-highlighter.js creates a synthetic anchor
   element for the current hash string (which may be more than just "#200" and
   instead could be "#200-220" or "#220,225,227" or something like that) and
   gives it this class.

   The element is made a child of the .line-number element.

   See the method's documentation for more context.
*/
.goto {
  /* This needs to be large enough so that the "position: sticky"
     stuck lines don't obscure the line we're trying to display.
     Also, we add an extra line of padding to compensate for the box-shadow.
     Note: The default must be -1 * the offset for the non-stuck case.
   */
  scroll-margin-top: calc((var(--nesting-level, -2) + 2) * var(--base-font-size) * var(--source-line-height));
}

.nesting-container > .goto {
  /* The anchor for the first-line of a sticky container doesn't need to
     account for the sticky line itself, but still needs a line of padding
     for the box-shadow.  Disclaimer: This is only necessary for nesting
     levels >= 1 and results in an extra line of padding for == 0, but the
     complexity to fix it doesn't seem worth it.
   */
  scroll-margin-top: calc((var(--nesting-level) + 1) * var(--base-font-size) * var(--source-line-height));
}

/* ## Blame ## */
.blame-strip {
  display: block;
  width: 20px;
  height: 100%;
  padding: 0;
  margin: 0;
  touch-action: none; /* fallback for FF pre-85 which didn't support touch-action:pinch-zoom */
  touch-action: pinch-zoom;
  @media (forced-colors) {
    border-inline: 1px solid ButtonText;
    &:hover {
      background-color: SelectedItem;
      border-color: SelectedItemText;
    }
    &:active {
      border-color: ButtonText;
    }
  }
}
/* blame zebra stripes: we alternate colors whenever the revision a line is from
   changes between lines. */
.c1 {
  background-color: var(--blame-light-gray);
}
.c2 {
  background-color: var(--blame-dark-gray);
}

.blame-popup {
  position: absolute;
  /* positioned by BlamePopup in blame.js */
  top: 0;
  left: 0;
  width: 600px;
  padding: 10px;
  background-color: var(--blame-popup-background);
  color: var(--blame-popup-color);
  box-shadow: 3px 3px 3px rgba(0, 0, 0, .5);
  border-radius: 3px;
  text-align: left;
  z-index: 101;
  cursor: auto;
  @media (prefers-contrast) {
    border: 1px solid CanvasText;
  }
}
.deemphasize {
  color: GrayText;
}
.minus-line {
  background-color: var(--diff-minus-line-background);
}
.plus-line {
  background-color: var(--diff-plus-line-background);
}

/* Search box */
input,
select {
  padding: 0.5em;
}
input[placeholder],
input::placeholder {
  text-overflow: ellipsis;
}
#search-box #query {
  width: 100%;
}
#search-box #path {
  width: 100%;
}
#query {
  /* Leave room for spinner. */
  padding-right: 40px;
  @media (forced-colors) {
    background-color: Field;
    border: 1px solid ButtonText;
    color: FieldText;
  }
}
.in-progress #spinner {
  background: transparent url("../images/spinner-large.gif") 0 0 / contain
    no-repeat;
}
#spinner {
  display: inline-block;
  position: absolute;
  top: 10px;
  right: 10px;
  padding-left: 2rem;
  width: auto;
  bottom: 10px;
}
.access-key {
  text-decoration: underline;
}
#search-box {
  background-image: var(--search-box-background-image);
  border-bottom: 1px solid var(--page-border-color);
  padding: var(--search-box-padding);
  width: 100%;
}
#search-box > fieldset {
  min-height: var(--search-box-fieldset-min-height);
}

#search-box > fieldset {
  position: relative;
  margin: 0;
  padding: 0;
  border: 0;

  display: flex;
  flex-direction: row;
  align-items: center;
}
:root.old-rev #search-box {
  padding-bottom: var(--search-box-old-rev-padding-bottom);
}
#revision {
  padding-top: 0;
}
:root.old-rev #revision {
  padding-top: var(--revision-padding-top);
  color: var(--revision-text-color);
}
.v-flex-container {
  display: flex;
  flex-direction: column;
}
#query-section {
  flex: 6;
  position: relative;
}
#option-section {
  flex-grow: 0;
  flex-shrink: 0;
  flex-basis: auto;

  justify-content: center;
  padding: 0 2rem 0 0;
  /*min-width: 9rem;*/
  /*align-self: center;*/
}
#option-section input[type="checkbox"] {
  margin: var(--checkbox-margin);
  height: var(--checkbox-height);
}
#path-section {
  flex: 3;
}
/*http://developer.yahoo.com/blogs/ydn/posts/2012/10/clip-your-hidden-content-for-better-accessibility/*/
.visually-hidden {
  position: absolute;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0;
  border: 0;
  height: 1px;
  width: 1px;
  overflow: hidden;
}
/* Message bubble */
.bubble {
  border: 1px solid #ccc;
  border-radius: 9px;
  color: #6c6c6c;
  display: none;
  font-size: 85%;
  padding: 0.1rem 30px 0.1rem 34px;
  position: absolute;
  top: 0.25rem;
}
/* The big triangle */
.bubble:before {
  content: "";
  position: absolute;
  border-style: solid;
  border-color: #ccc transparent;
  /* reduce the damage in FF3.0 */
  display: block;
  width: 0;

  top: -9px; /* value = - border-top-width - border-bottom-width */
  bottom: auto;
  right: auto;
  left: 11px; /* controls horizontal position */
  border-width: 0 9px 9px;
}
/* The small triangle */
.bubble:after {
  content: "";
  position: absolute;
  border-style: solid;
  border-color: #fff transparent;
  /* reduce the damage in FF3.0 */
  display: block;
  width: 0;

  top: -8px; /* value = - border-top-width - border-bottom-width */
  bottom: auto;
  right: auto;
  left: 11px; /* value = (:before left) + (:before border-left) - (:after border-left) */
  border-width: 0 9px 9px;
}
.bubble.info {
  background: white url(../images/info.gif) 12px 0 / 3ex no-repeat;
}
.bubble.warning {
  background: white url("../images/warning.gif") 10px -2px / 3.5ex no-repeat;
}
.bubble.error {
  background: white url(../images/error.gif) 12px 0 / 3ex no-repeat;
}
.zero-size-container {
  position: relative;
  height: 0;
  width: 100%;
}
@media only screen and (min-width: 740px) {
  .bubble {
    margin-right: 16%; /* 100% minus the above */
  }
}

@media only screen and (min-device-width: 320px) {
  .bubble {
    margin-right: 38%; /* 100% minus the above */
  }
  input[type="submit"] {
    margin-right: 14%;
  }
}

.svg-preview > h4 {
  margin-bottom: 0;
}

.svg-preview > a {
  display: block;
}

.svg-preview > a > img {
  float: left;
  clear: both;
  min-height: 50px;
  max-height: 300px;
  min-width: 50px;
  max-width: 300px;
  box-sizing: content-box;
  border: 1px dashed #555;
  margin-top: 1em;
  margin-bottom: 1em;
}

#svg-preview-checkerboard {
  margin-inline-start: 0;
}

#svg-preview-checkerboard:checked + label + a > img {
  background-image: linear-gradient(
      45deg,
      #555 25%,
      transparent 25%,
      transparent 75%,
      #555 75%,
      #555 100%
    ),
    linear-gradient(
      45deg,
      #555 25%,
      transparent 25%,
      transparent 75%,
      #555 75%,
      #555 100%
    );
  background-size: 10px 10px;
  background-position: 0 0, 5px 5px;
}

.syn_def {
  font-weight: 600;
}

.syn_type {
  color: var(--syntax-type-color);
}

.syn_string {
  color: var(--syntax-string-color);
}

.syn_comment {
  color: var(--syntax-comment-color);
}

.syn_tag,
.syn_reserved {
  color: var(--syntax-reserved-color);
}

.syn_regex {
  color: var(--syntax-regex-color);
}

/* ## Code Coverage Styling ## */

/* Color themes are currently from the Color Brewer 2.0 Project which is for
 * cartography and other uses.  Themes below are using "diverging"
 * "colorblind safe" 11-count colors.  The (middle) 6th color is used as the
 * uncovered foreground color, the adjacent (lightest) 5th and 7th colors used
 * for background colors, and 2nd and 10th colors used for foreground colors
 * unless otherwise noted.
 *
 * Our visual presentation of coverage data has two modes:
 * 1. The user is not hovering over coverage cells.  In this case, we want
 *    as little visual noise as possible so we display interpolated coverage
 *    data with only hits and misses (and uncovered at the top and bottom where
 *    interpolation is not appropriate.)
 * 2. The user is hovering over a coverage cell.  In this case we aren't
 *    concerned about the coverage data being distracting and we want to show
 *    more detail.  We no longer show interpolated values and we also vary the
 *    color of hits so that lines with more coverage hits are shown with darker
 *    colors.
 *
 * To this end, we have two variables --cov-hit-unhovered-background and
 * --cov-miss-unhovered-background that have valid color values when we're not
 * hovering and are made to be empty when we're hovering, allowing us to fail
 * over to a second set of colors.
 */
:root.coverage-details-shown {
  --cov-miss-unhovered-background: unset;
  --cov-hit-unhovered-background: unset;
}

.cov-strip {
  display: block;
  width: 5px;
  height: 100%;
  padding: 0;
  margin: 0;
  touch-action: none; /* fallback for FF pre-85 which didn't support touch-action:pinch-zoom */
  touch-action: pinch-zoom;
}

.cov-interpolated.cov-miss {
  background-color: var(--cov-miss-unhovered-background, var(--cov-interpolated-background));
}
.cov-interpolated.cov-hit {
  background-color: var(--cov-hit-unhovered-background, var(--cov-interpolated-background));
}

.cov-known.cov-miss {
  background-color: var(--cov-miss-background);
}

.cov-log10-0,
.cov-log10-1 {
  background-color: var(--cov-hit-unhovered-background, var(--cov-hit-background-1));
}
.cov-log10-2,
.cov-log10-3 {
  background-color: var(--cov-hit-unhovered-background, var(--cov-hit-background-2));
}
.cov-log10-4,
.cov-log10-5 {
  background-color: var(--cov-hit-unhovered-background, var(--cov-hit-background-3));
}
.cov-log10-6,
.cov-log10-7 {
  background-color: var(--cov-hit-unhovered-background, var(--cov-hit-background-4));
}
.cov-log10-8,
.cov-log10-9 {
  background-color: var(--cov-hit-unhovered-background, var(--cov-hit-background-5));
}

/* ## Class Diagram Styling ## */
/* Everything about diagrams needs some kind of dark mode support.
 *
 * Our diagram pointer background colors come from the ColorBrewer2 diverging
 * PiYG scheme with 11 steps: https://colorbrewer2.org/#type=diverging&scheme=PiYG&n=11
 */
g.ptr-strong > polygon {
  fill: #7fbc41;
}
g.ptr-unique > polygon {
  fill: #b8e186;
}
g.ptr-weak > polygon {
  fill: #fde0ef;
}
g.ptr-raw > polygon {
  fill: #f1b6da;
}
g.ptr-ref > polygon, g.ptr-contains > polygon {
  fill: #e6f5d0;
}

g.hovered-cur-node > polygon {
  fill: #fbf;
}
g.hovered-out-node > polygon {
  fill: #bbf;
}
g.hovered-in-node > polygon {
  fill: #bfb;
}

g.edge.hovered-out-edge > path,
g.edge.hovered-out-edge > polygon {
  stroke: blue;
  stroke-width: 2px;
  stroke-opacity: 1;
}
g.edge.hovered-in-edge > path,
g.edge.hovered-in-edge > polygon {
  stroke: green;
  stroke-width: 2px;
  stroke-opacity: 1;
}

g.edge > path {
  stroke-opacity: 0.2;
}

g.blurry g.edge polygon,
g.blurry g.edge path {
  stroke: none
}

g.blurry g.node text {
  fill: none;
}

g.blurry g.cluster polygon {
  stroke: none;
}
g.blurry g.cluster text {
  fill: none;
}

/* The depth mechanism was initially introduce for experimental metablob
 * blurring, but we can use the 0 depth to help emphasize the roots of the
 * graph without the blurring and in a way that doesn't conflict with uses of
 * color.
 */
.diagram-depth-0 {
  --diagram-depth: 0;
  stroke-width: 2;
}
.diagram-depth-1 {
  --diagram-depth: 1;
}
.diagram-depth-2 {
  --diagram-depth: 2;
}
.diagram-depth-3 {
  --diagram-depth: 3;
}
.diagram-depth-4 {
  --diagram-depth: 4;
}
.diagram-depth-5 {
  --diagram-depth: 5;
}
.diagram-depth-6 {
  --diagram-depth: 6;
}
.diagram-depth-7 {
  --diagram-depth: 7;
}
.diagram-depth-8 {
  --diagram-depth: 8;
}
.diagram-depth-9 {
  --diagram-depth: 9;
}
.diagram-depth-10 {
  --diagram-depth: 10;
}
.diagram-depth-11 {
  --diagram-depth: 10;
}
.diagram-depth-12 {
  --diagram-depth: 10;
}
.diagram-depth-13 {
  --diagram-depth: 10;
}

g.blurry.depth-mode g.node polygon {
  fill: hwb(var(--diagram-depth-hue) calc(40% + 60% * var(--diagram-depth) / 3) 0%);
  stroke: hwb(var(--diagram-depth-hue) calc(40% + 60% * var(--diagram-depth) / 3) 0%);
}

g.true-diag g.node polygon {
  fill: white;
}

/* Field Layout */

#symbol-tree-table-col-selector,
#symbol-tree-table-list {
  padding: 0 2rem;
}

#symbol-tree-table-list .type-cell {
  display: none;
}

#symbol-tree-table-list.hide-name .name-cell {
  display: none;
}

#symbol-tree-table-list.show-type .type-cell {
  display: table-cell;
}

#symbol-tree-table-list.hide-line .line-cell {
  display: none;
}

.symbol-tree-table {
  border-collapse: separate;
}

.symbol-tree-table .field-type {
  display: inline-block;
  max-width: 40vw;
}

.symbol-tree-table .field-offset,
.symbol-tree-table .field-size,
.symbol-tree-table .field-hole,
.symbol-tree-table .field-padding {
  white-space: pre;
}

.symbol-tree-table + .symbol-tree-table {
  margin-top: 2em;
}

.symbol-tree-table h3 {
  margin: 0;
}

.symbol-tree-table td, .symbol-tree-table th {
  border-color: var(--page-border-color);
  border-style: solid;
  border-width: 0px;
}

.symbol-tree-table tr:first-child th {
  border-block-start-width: 1px;
}

.symbol-tree-table th,
.symbol-tree-table td {
  border-block-end-width: 1px;
  border-inline-start-width: 1px;
}

.symbol-tree-table th:last-child,
.symbol-tree-table td:last-child {
  border-inline-end-width: 1px;
}

.symbol-tree-table tr:first-child th:first-child,
#symbol-tree-table-list.hide-name.show-type tr:first-child th.type-cell,
#symbol-tree-table-list.hide-name:not(.show-type) tr:first-child th.line-cell {
  border-start-start-radius: 4px;
}
.symbol-tree-table tr:first-child th:last-child {
  border-start-end-radius: 4px;
}
.symbol-tree-table tr:last-child td:first-child,
#symbol-tree-table-list.hide-name.show-type tr:last-child td.type-cell,
#symbol-tree-table-list.hide-name:not(.show-type) tr:last-child td.line-cell {
  border-end-start-radius: 4px;
}
.symbol-tree-table tr:last-child td:last-child {
  border-end-end-radius: 4px;
}

.symbol-tree-table th {
  color: var(--table-header-color);
  background-color: var(--table-header-background);
}

#symbol-tree-table-col-selector {
  text-align: end;
}

#symbol-tree-table-col-selector label {
  display: inline-block;
}

#symbol-tree-table-col-selector label + label {
  margin: 0 0 0 8px;
}

/* Query result debugging */

#query-debug-results-json[aria-hidden] {
  display: none;
}
