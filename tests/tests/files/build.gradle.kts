/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "2.1.20"

    // Apply the java-library plugin for API and implementation separation.
    `java-library`
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url = uri("https://maven.mozilla.org/maven2/") }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.3")

    // Use the Kotlin JUnit 5 integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")

    // Use the JUnit 5 integration.
    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.9.3")

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api("org.apache.commons:commons-math3:3.6.1")

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation("com.google.guava:guava:32.1.1-jre")

    //
    compileOnly("com.sourcegraph:semanticdb-javac:0.10.3")
    testCompileOnly("com.sourcegraph:semanticdb-javac:0.10.3")
    kotlinCompilerPluginClasspath("com.github.mozsearch:semanticdb-kotlinc:0.5.0")
}

var sourceroot = rootProject.projectDir.getCanonicalPath()
var targetroot = rootProject.layout.buildDirectory.file("semanticdb-targetroot").get()

tasks.withType<JavaCompile> {
    options.compilerArgs.add("-Xplugin:semanticdb -sourceroot:${sourceroot} -targetroot:${targetroot}")
}

tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> {
    compilerOptions.freeCompilerArgs.addAll(listOf(
        "-P", "plugin:semanticdb-kotlinc:sourceroot=${sourceroot}",
        "-P", "plugin:semanticdb-kotlinc:targetroot=${targetroot}",
    ))
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
