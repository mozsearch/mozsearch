//
// Automatically generated by ipdlc.
// Edit at your own risk
//


#include "mozilla/_ipdltest/PTestBasic.h"
#include "mozilla/_ipdltest/PTestBasicParent.h"
#include "mozilla/_ipdltest/PTestBasicChild.h"

#include "ipc/IPCMessageUtils.h"
#include "ipc/IPCMessageUtilsSpecializations.h"
#include "nsIFile.h"
#include "mozilla/ipc/Endpoint.h"
#include "mozilla/ipc/ProtocolMessageUtils.h"
#include "mozilla/ipc/ProtocolUtils.h"
#include "mozilla/ipc/ShmemMessageUtils.h"
#include "mozilla/ipc/TaintingIPCUtils.h"

namespace mozilla {
namespace _ipdltest {
namespace PTestBasic {

nsresult
CreateEndpoints(
        base::ProcessId aParentDestPid,
        base::ProcessId aChildDestPid,
        mozilla::ipc::Endpoint<mozilla::_ipdltest::PTestBasicParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::_ipdltest::PTestBasicChild>* aChild)
{
    return mozilla::ipc::CreateEndpoints(
        mozilla::ipc::PrivateIPDLInterface(),
        aParentDestPid, aChildDestPid, aParent, aChild);
}
nsresult
CreateEndpoints(
        mozilla::ipc::Endpoint<mozilla::_ipdltest::PTestBasicParent>* aParent,
        mozilla::ipc::Endpoint<mozilla::_ipdltest::PTestBasicChild>* aChild)
{
    return mozilla::ipc::CreateEndpoints(
        mozilla::ipc::PrivateIPDLInterface(),
        aParent, aChild);
}
mozilla::UniquePtr<IPC::Message>
Msg_Hello(int32_t routingId)
{
    return IPC::Message::IPDLMessage(routingId, Msg_Hello__ID, 0, IPC::Message::HeaderFlags(IPC::Message::NOT_NESTED, IPC::Message::NORMAL_PRIORITY, IPC::Message::COMPRESSION_NONE, IPC::Message::NOT_CONSTRUCTOR, IPC::Message::ASYNC, IPC::Message::NOT_REPLY));
}

} // namespace PTestBasic
} // namespace _ipdltest
} // namespace mozilla
