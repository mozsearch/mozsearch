#!/bin/bash

set -e # Errors are fatal
set -x # Show commands

mkdir -p $OBJDIR

# Add the special clang flags.
$MOZSEARCH_PATH/scripts/indexer-setup.py >> $INDEX_ROOT/config
source $INDEX_ROOT/config

cd $INDEX_ROOT/files
for f in *.cpp
do
  $CXX -DTEST_MACRO1 -DTEST_MACRO2 $f -std=c++14 -c -o $OBJDIR/${f%%.cpp}.o -Wall
done

export CARGO_TARGET_DIR=$OBJDIR
cargo clean
cargo build

# Firefox generates files named something like Configure.cpp during
# the build process, but their source files are not around by the time
# we run the analysis. crossref.rs needs to be able to deal with this
# case by ignoring the error and continuing with the other files,
# rather than bailing out. This simulates that case.
BUILD_TIME_FILE=BuildTimeFile.cpp
echo "int main() { return 0; }" > $BUILD_TIME_FILE
$CXX -DTEST_MACRO1 -DTEST_MACRO2 $BUILD_TIME_FILE -std=c++14 -c -o $OBJDIR/BuildTimeFile.o -Wall
rm BuildTimeFile.cpp

GENERATED_FILE=$OBJDIR/GeneratedFile.cpp
echo "int main() { return 0; }" > $GENERATED_FILE
$CXX -DTEST_MACRO1 -DTEST_MACRO2 $GENERATED_FILE -std=c++14 -c -o $OBJDIR/GeneratedFile.o -Wall
